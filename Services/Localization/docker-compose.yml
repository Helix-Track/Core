version: '3.8'

###############################################################################
# HelixTrack Localization Service - Docker Compose Configuration
#
# This file defines the complete Localization service stack including:
# - Localization HTTP/3 QUIC microservice
# - PostgreSQL database with encryption
# - Redis cache (optional)
# - Periodic backup service
#
# Usage:
#   docker-compose up -d
#   docker-compose down
#   docker-compose logs -f localization
###############################################################################

services:
  #############################################################################
  # PostgreSQL Database
  #############################################################################
  localization-db:
    image: postgres:15-alpine
    container_name: helixtrack-localization-db
    hostname: localization-db
    restart: unless-stopped

    environment:
      - POSTGRES_DB=${LOCALIZATION_DB_NAME:-helixtrack_localization}
      - POSTGRES_USER=${LOCALIZATION_DB_USER:-localization_user}
      - POSTGRES_PASSWORD=${LOCALIZATION_DB_PASSWORD:-localization_secure_password_change_me}
      - POSTGRES_INITDB_ARGS=--encoding=UTF8 --lc-collate=C --lc-ctype=C
      - PGDATA=/var/lib/postgresql/data/pgdata

    volumes:
      - localization-db-data:/var/lib/postgresql/data
      - ../../Database/DDL/Services/Localization/Definition.V1.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro

    ports:
      - "${LOCALIZATION_DB_PORT:-5434}:5432"

    networks:
      - localization-network

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${LOCALIZATION_DB_USER:-localization_user} -d ${LOCALIZATION_DB_NAME:-helixtrack_localization}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  #############################################################################
  # Redis Cache (Optional)
  #############################################################################
  localization-redis:
    image: redis:7-alpine
    container_name: helixtrack-localization-redis
    hostname: localization-redis
    restart: unless-stopped

    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-redis_password_change_me}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 60 1000
      --loglevel warning

    volumes:
      - localization-redis-data:/data

    ports:
      - "${REDIS_PORT:-6380}:6379"

    networks:
      - localization-network

    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s

    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

    profiles:
      - cache

  #############################################################################
  # Localization Service
  #############################################################################
  localization-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: helixtrack-localization-service
    hostname: localization-service
    restart: unless-stopped

    depends_on:
      localization-db:
        condition: service_healthy

    environment:
      - DB_HOST=localization-db
      - DB_PORT=5432
      - DB_NAME=${LOCALIZATION_DB_NAME:-helixtrack_localization}
      - DB_USER=${LOCALIZATION_DB_USER:-localization_user}
      - DB_PASSWORD=${LOCALIZATION_DB_PASSWORD:-localization_secure_password_change_me}
      - REDIS_ENABLED=false
      - REDIS_HOST=localization-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password_change_me}
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-key-change-in-production}
      - SEED_DATA_PATH=seed-data
      - LOG_LEVEL=info

    ports:
      - "${LOCALIZATION_PORT:-8085}:8085"

    volumes:
      - ./configs:/app/configs:ro
      - ./certs:/app/certs:ro
      - ./backups:/app/backups
      - localization-logs:/app/logs

    networks:
      - localization-network

    healthcheck:
      test: ["CMD", "curl", "--insecure", "--fail", "https://localhost:8085/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  #############################################################################
  # Periodic Backup Service
  #############################################################################
  localization-backup:
    image: postgres:15-alpine
    container_name: helixtrack-localization-backup
    restart: unless-stopped

    depends_on:
      localization-db:
        condition: service_healthy

    environment:
      - PGHOST=localization-db
      - PGPORT=5432
      - PGDATABASE=${LOCALIZATION_DB_NAME:-helixtrack_localization}
      - PGUSER=${LOCALIZATION_DB_USER:-localization_user}
      - PGPASSWORD=${LOCALIZATION_DB_PASSWORD:-localization_secure_password_change_me}

    volumes:
      - ./scripts:/scripts:ro
      - ./backups:/backups

    networks:
      - localization-network

    # Run daily backup at 2 AM
    entrypoint: |
      /bin/sh -c "
        apk add --no-cache bash jq curl &&
        while true; do
          sleep 3600;
          /scripts/periodic-backup.sh daily;
        done
      "

    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M

    profiles:
      - backup

###############################################################################
# Networks
###############################################################################
networks:
  localization-network:
    driver: bridge
    name: helixtrack-localization-network

###############################################################################
# Volumes
###############################################################################
volumes:
  localization-db-data:
    name: helixtrack-localization-db-data
  localization-redis-data:
    name: helixtrack-localization-redis-data
  localization-logs:
    name: helixtrack-localization-logs
